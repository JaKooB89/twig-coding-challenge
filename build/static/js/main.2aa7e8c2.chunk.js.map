{"version":3,"sources":["components/UI/Header.js","Helpers.js","components/Usernames/Usernames.js","components/Controls/Controls.js","App.js","index.js"],"names":["Header","className","splitToChunks","array","chunkSize","test","arr","result","numberOfItems","Math","ceil","length","i","push","splice","Usernames","items","isLoading","rows","console","log","map","item","Controls","getNames","getRows","useState","numberOfNames","setNumberOfNames","numberOfRows","setNumberOfRows","htmlFor","type","name","id","min","max","value","onChange","e","n","target","r","App","setItems","setIsLoading","names","setNames","setRows","useEffect","a","axios","request","url","method","params","inc","results","data","title","first","last","fetchItems","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAYeA,G,YATA,WACb,OACE,0BAASC,UAAU,SAAnB,UACE,gDACA,qE,gBCDC,SAASC,EAAcC,EAAOC,GACnC,IALO,oBAAoBC,KAKND,GACnB,OAAOD,EAOT,IAdK,IAUDG,EAAG,YAAOH,GACVI,EAAS,GACTC,EAAgBC,KAAKC,KAAMP,EAAMQ,OAASP,GAErCQ,EAAI,EAAGA,EAAIR,EAAWQ,IAC7BL,EAAOM,KAAKP,EAAIQ,OAAO,EAAGN,IAE5B,OAAOD,ECdT,IAYeQ,EAZG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAErC,OADAC,QAAQC,IAAIF,GACLD,EAAa,4CAAwB,yBAAShB,UAAU,WAAnB,SAC1C,6BACGC,EAAcc,EAAOE,GAAMG,KAAI,SAACC,EAAMV,GAAP,OAC9B,6BAAaU,GAAJV,WCqCFW,G,MA3CE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACAC,mBAAS,GADT,mBACnCC,EADmC,KACpBC,EADoB,OAEFF,mBAAS,GAFP,mBAEnCG,EAFmC,KAErBC,EAFqB,KAc1C,OACE,yBAAS7B,UAAU,WAAnB,SACE,iCACE,uBAAO8B,QAAQ,gBAAf,qCACA,uBACEC,KAAK,SACLC,KAAK,kBACLC,GAAG,gBACHC,IAAI,IACJC,IAAI,KACJC,MAAOV,EACPW,SAAU,SAACC,GAAD,OArBGC,EAqBgBD,EAAEE,OAAOJ,MApB5CT,EAAiBY,QACjBhB,EAASgB,GAFS,IAACA,KAuBf,uBAAOT,QAAQ,gBAAf,6BACA,uBACEC,KAAK,SACLC,KAAK,iBACLC,GAAG,eACHC,IAAI,IACJC,IAAI,KACJC,MAAOR,EACPS,SAAU,SAACC,GAAD,OA1BEG,EA0BgBH,EAAEE,OAAOJ,MAzB3CP,EAAgBY,QAChBjB,EAAQiB,GAFS,IAACA,Y,iBC2BPC,EAhCH,WAAO,IAAD,EACUjB,mBAAS,IADnB,mBACTV,EADS,KACF4B,EADE,OAEkBlB,oBAAS,GAF3B,mBAETT,EAFS,KAEE4B,EAFF,OAGUnB,mBAAS,GAHnB,mBAGToB,EAHS,KAGFC,EAHE,OAIQrB,mBAAS,GAJjB,mBAITR,EAJS,KAIH8B,EAJG,KAuBhB,OAjBAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAMC,QAAQ,CACjCC,IAAK,4BACLC,OAAQ,MACRC,OAAQ,CACNC,IAAK,aACLC,QAASX,KANI,OACXvC,EADW,OASjBqC,EAASrC,EAAOmD,KAAKD,QAAQpC,KAAI,SAAAC,GAC/B,OAAO,iCAAOA,EAAKW,KAAK0B,MAAjB,IAAyBrC,EAAKW,KAAK2B,MAAnC,IAA2CtC,EAAKW,KAAK4B,YAV7C,2CAAH,qDAahBC,GAAaC,MAAK,SAAArB,GAAC,OAAIG,GAAa,QACnC,CAACC,EAAO5B,IAGT,sBAAKjB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUuB,SAAU,SAACgB,GAAD,OAAOO,EAASP,IAAIf,QAAS,SAACiB,GAAD,OAAOM,EAAQN,MAChE,cAAC,EAAD,CAAWzB,UAAWA,EAAWD,MAAOA,EAAOE,KAAMA,QC9B3D8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2aa7e8c2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <section className=\"Header\">\r\n      <h1>Twig Education</h1>\r\n      <h2>Coding Challenge - Jakub Czaja</h2>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Header","// Check if number is positive integer\r\nexport function isNormalInteger(num) {\r\n  return /^\\+?(1|[1-9]\\d*)$/.test(num)\r\n}\r\n\r\n// Split an array into equally sized sub-arrays\r\nexport function splitToChunks(array, chunkSize) {\r\n  if (!isNormalInteger(chunkSize)) {\r\n    return array\r\n  }\r\n\r\n  let arr = [...array]\r\n  let result = []\r\n  let numberOfItems = Math.ceil((array.length / chunkSize))\r\n\r\n  for (let i = 0; i < chunkSize; i++) {\r\n    result.push(arr.splice(0, numberOfItems))\r\n  }\r\n  return result\r\n}\r\n","import React from 'react';\r\nimport './Usernames.css'\r\nimport { splitToChunks } from '../../Helpers'\r\n\r\nconst Usernames = ({ items, isLoading, rows }) => {\r\n  console.log(rows)\r\n  return isLoading ? (<h3>loading...</h3>) : (<section className=\"UserList\">\r\n    <ul>\r\n      {splitToChunks(items, rows).map((item, i) => (\r\n        <li key={i}>{item}</li>\r\n      ))}\r\n    </ul>\r\n  </section>)\r\n\r\n}\r\n\r\nexport default Usernames","import React, { useState } from 'react';\r\nimport './Controls.css'\r\n\r\nconst Controls = ({ getNames, getRows }) => {\r\n  const [numberOfNames, setNumberOfNames] = useState(5)\r\n  const [numberOfRows, setNumberOfRows] = useState(3)\r\n\r\n  const updateNames = (n) => {\r\n    setNumberOfNames(n)\r\n    getNames(n)\r\n  }\r\n\r\n  const updateRows = (r) => {\r\n    setNumberOfRows(r)\r\n    getRows(r)\r\n  }\r\n\r\n  return (\r\n    <section className='Controls'>\r\n      <form>\r\n        <label htmlFor=\"numberOfNames\">Number of random names </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"Number of Names\"\r\n          id=\"numberOfNames\"\r\n          min=\"1\"\r\n          max=\"99\"\r\n          value={numberOfNames}\r\n          onChange={(e) => updateNames(e.target.value)}\r\n        />\r\n        <label htmlFor=\"numberOfNames\">Number of rows </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"Number of Rows\"\r\n          id=\"numberOfRows\"\r\n          min=\"1\"\r\n          max=\"99\"\r\n          value={numberOfRows}\r\n          onChange={(e) => updateRows(e.target.value)}\r\n        />\r\n      </form>\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\nexport default Controls","import React, {useState, useEffect}  from 'react'\nimport './App.css'\nimport Header from \"./components/UI/Header\"\nimport Usernames from './components/Usernames/Usernames'\nimport Controls from './components/Controls/Controls'\nimport axios from \"axios\";\n\nconst App = () => {\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [names, setNames] = useState(5)\n  const [rows, setRows] = useState(3)\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      const result = await axios.request({\n        url: 'https://randomuser.me/api',\n        method: 'get',\n        params: {\n          inc: 'name,login',\n          results: names\n        }\n      })\n      setItems(result.data.results.map(item => {\n        return <span>{item.name.title} {item.name.first} {item.name.last}</span>\n      }))\n    }\n    fetchItems().then(r => setIsLoading(false))\n  }, [names, rows])\n\n  return (\n    <div className=\"Container\">\n      <Header />\n      <Controls getNames={(n) => setNames(n)} getRows={(r) => setRows(r)} />\n      <Usernames isLoading={isLoading} items={items} rows={rows} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}